#Import statements

import turtle
import random

#screen set up

wn = turtle.Screen()
wn.title("Block game")
wn.setup(width = 800, height = 600)


# create title screen
wn.bgcolor("blue")
titlewriter = turtle.Turtle()
titlewriter.hideturtle()
titlewriter.penup()
titlewriter.goto(-120,0)
titlewriter.write("Tap Enter To Play", font = ("arial", 20, "bold"))
titlewriter.goto(-350,-75)
titlewriter.write("How To Play - Avoid falling blue blocks to stay alive. The longer you stay alive the better score you get.",font = ("arial", 11, "bold"))
titlewriter.goto(-125,-125)
titlewriter.write("Use the arow keys to move player",font = ("arial", 11, "bold"))
#main game loop


n = 5
blocks_changed = 0

def change_blocks():
    global n
    global blocks_changed
    for i in range(n):
            
            
        block = turtle.Turtle()
        block.hideturtle()
        block.speed(0)
        block.turtlesize(3)
        block.shape("square")
        block.color("blue")
        block.penup()
        x = random.randint(-380,380)
        block.goto(x,350)
        block.speed =  random.randint(10,50)
        block_cat.append(block)
        block.showturtle()
    blocks_changed +=1

def go_game():
    '''Function that starts the game initiating the  variables and game pieces'''
    global n
  
    
    
    titlewriter.clear()
    global game
    game = 1
    wn.bgcolor("white")
    

    #Setup Score
    global scorewriter
    scorewriter = turtle.Turtle()
    scorewriter.hideturtle()
    scorewriter.penup()
    scorewriter.goto(-50,250)
    global score
    score = 0
    scorewriter.write("Score:" + str(score), font = ("arial", 20, "bold"))

    #player setup
    global player
    player = turtle.Turtle()
    player.speed(0)
    player.shape("square")
    player.penup()
    player.goto(0,-250)
    player.direction = "stop"



    #block setup
    global block_cat
    block_cat = []
    global blocks_changed

    

 
    change_blocks()   
   
    #functions

    def go_left():
        player.direction = "left"

    def go_right():
        player.direction = "right"


    #key inputs

    wn.listen()
    wn.onkeypress(go_left, "Left")
    wn.onkeypress(go_right, "Right")

    #Setup before game loop

    for block in block_cat:
        block.showturtle()


    # main game loop
    
    while game > 0:
        
        #move player
        
        if player.direction =="left":
            x = player.xcor()
            x-= 10
            player.setx(x)
            if x > 400:
                player.goto(-400,-250)

            if x < -400:
                player.goto(400,-250)
        if player.direction =="right":
            x = player.xcor()
            x+= 10
            player.setx(x)
            if x > 400:
                player.goto(-400,-250)

            if x < -400:
                player.goto(400,250)
        

        #change the score

        def change_score():

            scorewriter.clear()
            scorewriter.write("Score:" + str(score), font = ("arial", 20, "bold"))
            
        #move block
        
        for block in block_cat:
            y = block.ycor()
            y -= block.speed
            block.sety(y)


            if y < -300:
                x = random.randint(-380,380)
                y = random.randint(300,400)
                block.goto(x,y)
                score = score + 1
                change_score()
                

            if block.distance(player) < 40:
                x = random.randint(-380,380)
                y = random.randint(300,450)
                block.goto(x,y)
                
                game = 0
                print("You lose")
                finish_screen()



        if (score == 15) and (blocks_changed==1):
            n = n + 5
            change_blocks()

        if (score == 30) and (blocks_changed==2):
            n = n + 5
            change_blocks()    

        if (score == 50) and (blocks_changed==3):
            n = n + 5
            change_blocks() 

        if (score == 70) and (blocks_changed==4):
            n = n + 10
            change_blocks() 

        if (score == 100) and (blocks_changed==5):
            n = n + 5
            change_blocks() 

wn.onkeypress(go_game, "Return")
wn.listen()


def finish_screen():
    scorewriter.clear()
    for block in block_cat:
        block.hideturtle()

    player.hideturtle()
    titlewriter.goto(-60,0)
    titlewriter.write("YOU LOSE", font = ("arial", 20, "bold"))
    titlewriter.goto(-75,-75)
    titlewriter.write("Your score was: " + str(score),font = ("arial", 15, "bold"))



wn.mainloop()
